{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["marked","require","setOptions","breaks","renderer","Renderer","App","props","state","text","placeholder","editorMaximized","previewMaximized","handleChange","bind","maximizeEditor","maximizePreview","event","this","setState","target","value","classes","className","onClick","boxExpand","markdown","onChange","React","Component","Toolbar","size","Editor","id","type","Preview","dangerouslySetInnerHTML","__html","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAIMA,EAASC,EAAQ,IACvBD,EAAOE,WAAW,CAChBC,QAAQ,IAGV,IAAMC,EAAW,IAAIJ,EAAOK,SAEtBC,E,kDACJ,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,KAAMC,EACNC,iBAAiB,EACjBC,kBAAkB,GAEpB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBATP,E,gDAWlB,SAAaG,GACXC,KAAKC,SAAS,CACZV,KAAMQ,EAAMG,OAAOC,U,4BAGvB,WACEH,KAAKC,SAAS,CACZR,iBAAkBO,KAAKV,MAAMG,oB,6BAGjC,WACEO,KAAKC,SAAS,CACZP,kBAAmBM,KAAKV,MAAMI,qB,oBAGlC,WACE,IAAMU,EAAUJ,KAAKV,MAAMG,gBACvB,CAAC,kBAAmB,iBAAkB,kCAAmC,kCACzEO,KAAKV,MAAMI,iBACX,CAAC,gBAAiB,mBAAoB,6BAA8B,2CACpE,CAAC,gBAAiB,iBAAkB,6BAA8B,kCACtE,OACE,sBAAKW,UAAU,MAAf,UACIL,KAAKV,MAAMI,iBAOX,KANF,qBAAKW,UAAWD,EAAQ,GAAxB,SACA,sBAAKC,UAAU,YAAf,UACE,cAAC,EAAD,CAASC,QAASN,KAAKH,eAAgBN,KAAK,WAC5C,cAAC,EAAD,CAAQgB,UAAWH,EAASI,SAAUR,KAAKV,MAAMC,KAAMkB,SAAUT,KAAKL,oBAKtEK,KAAKV,MAAMG,gBAOX,KANF,qBAAKY,UAAWD,EAAQ,GAAxB,SACE,sBAAKC,UAAU,aAAf,UACE,cAAC,EAAD,CAASC,QAASN,KAAKF,gBAAiBP,KAAK,YAC7C,cAAC,EAAD,CAASgB,UAAWH,EAASI,SAAUR,KAAKV,MAAMC,mB,GAhD5CmB,IAAMC,WA0DlBC,EAAU,SAAAvB,GACd,OACE,sBAAKgB,UAAU,iEAAf,UACE,gCACE,cAAC,IAAD,CAAYQ,KAAK,UAChBxB,EAAME,QAET,cAAC,IAAD,CAAoBc,UAAU,aAAaC,QAASjB,EAAMiB,QAASO,KAAK,cAKxEC,EAAS,SAAAzB,GACX,OACI,0BAAUgB,UAAWhB,EAAMkB,UAAU,GAAIQ,GAAG,SAASC,KAAK,OAAOP,SAAUpB,EAAMoB,SAAUN,MAAOd,EAAMmB,YAI1GS,EAAU,SAAA5B,GACd,OACI,qBAAKgB,UAAWhB,EAAMkB,UAAU,GAAhC,SACG,qBACAW,wBAAyB,CACzBC,OAAQrC,EAAOO,EAAMmB,SAAU,CAAEtB,SAAUA,KAE5C6B,GAAG,eAKLvB,EAAW,qmCA6CFJ,ICpIAgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1Bb,M","file":"static/js/main.5059a31a.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { AiOutlineExpandAlt, AiFillTool} from \"react-icons/ai\";\n\nconst marked = require('marked');\nmarked.setOptions({\n  breaks: true\n})\n\nconst renderer = new marked.Renderer();\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      text: placeholder,\n      editorMaximized: false,\n      previewMaximized: false\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.maximizeEditor = this.maximizeEditor.bind(this);\n    this.maximizePreview = this.maximizePreview.bind(this);\n  }\n  handleChange(event){\n    this.setState({\n      text: event.target.value\n    })\n  }\n  maximizeEditor(){\n    this.setState({\n      editorMaximized: !this.state.editorMaximized\n    })\n  }\n  maximizePreview(){\n    this.setState({\n      previewMaximized: !this.state.previewMaximized\n    })\n  }\n  render(){\n    const classes = this.state.editorMaximized\n      ? [\"editorMaximized\", \"previewWrapper\", \"border border-dark boxMaximized\", \"previewBox  border border-dark\"] \n      : this.state.previewMaximized \n      ? [\"editorWrapper\", \"previewMaximized\", \"border border-dark textbox\", \"previewBoxMaximized  border border-dark\"]\n      : [\"editorWrapper\", \"previewWrapper\", \"border border-dark textbox\", \"previewBox  border border-dark\"]\n    return (\n      <div className=\"App\">\n        {!this.state.previewMaximized ? \n        <div className={classes[0]}>\n        <div className=\"editorBox\">\n          <Toolbar onClick={this.maximizeEditor} text=\"Editor\"/>\n          <Editor boxExpand={classes} markdown={this.state.text} onChange={this.handleChange}/>\n        </div>\n        </div>\n        : null\n        }\n        {!this.state.editorMaximized ? \n        <div className={classes[1]}>\n          <div className=\"previewBox\">\n            <Toolbar onClick={this.maximizePreview} text=\"Preview\"/>\n            <Preview boxExpand={classes} markdown={this.state.text}/>\n        </div>\n        </div>\n        : null\n          }\n      </div>\n    );\n  }\n}\n\nconst Toolbar = props => {\n  return (\n    <div className=\"toolbar editor border-top border-right border-left border-dark\">\n      <div>\n        <AiFillTool size=\"1.3em\"/>\n        {props.text}\n        </div>\n      <AiOutlineExpandAlt className=\"expandIcon\" onClick={props.onClick} size=\"1.5em\"/>\n    </div>\n  )\n}\n\nconst Editor = props => {\n    return (\n        <textarea className={props.boxExpand[2]} id=\"editor\" type=\"text\" onChange={props.onChange} value={props.markdown}></textarea>\n    )\n}\n\nconst Preview = props => {\n  return (\n      <div className={props.boxExpand[3]}>\n         <div \n         dangerouslySetInnerHTML={{\n         __html: marked(props.markdown, { renderer: renderer })\n         }}\n        id='preview' />\n        </div>\n  )\n}\n\nconst placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}